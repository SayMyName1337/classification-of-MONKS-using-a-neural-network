2025-03-19 23:46:29,782 - OptimalClassifier - INFO - === Запуск оптимального классификатора для MONK-2 ===
2025-03-19 23:46:29,784 - OptimalClassifier - INFO - Загрузка данных MONK-2
2025-03-19 23:46:29,913 - OptimalClassifier - INFO - Данные успешно загружены: 169 обучающих и 432 тестовых примеров
2025-03-19 23:46:29,913 - OptimalClassifier - INFO - Признаки после расширения: ['a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a1_eq_1', 'a1_eq_2', 'a1_eq_3', 'a2_eq_1', 'a2_eq_2', 'a2_eq_3', 'a3_eq_1', 'a3_eq_2', 'a4_eq_1', 'a4_eq_2', 'a4_eq_3', 'a5_eq_2', 'a5_eq_4', 'a5_eq_1', 'a5_eq_3', 'a6_eq_2', 'a6_eq_1', 'count_1s', 'exactly_two_1s', 'a1_and_a2_eq_1', 'a1_and_a3_eq_1', 'a1_and_a4_eq_1', 'a1_and_a5_eq_1', 'a1_and_a6_eq_1', 'a2_and_a3_eq_1', 'a2_and_a4_eq_1', 'a2_and_a5_eq_1', 'a2_and_a6_eq_1', 'a3_and_a4_eq_1', 'a3_and_a5_eq_1', 'a3_and_a6_eq_1', 'a4_and_a5_eq_1', 'a4_and_a6_eq_1', 'a5_and_a6_eq_1', 'less_than_two_1s', 'more_than_two_1s', 'distance_from_pattern', 'diff_a1_a2', 'prod_a1_a2', 'diff_a1_a3', 'prod_a1_a3', 'diff_a1_a4', 'prod_a1_a4', 'diff_a1_a5', 'prod_a1_a5', 'diff_a1_a6', 'prod_a1_a6', 'diff_a2_a3', 'prod_a2_a3', 'diff_a2_a4', 'prod_a2_a4', 'diff_a2_a5', 'prod_a2_a5', 'diff_a2_a6', 'prod_a2_a6', 'diff_a3_a4', 'prod_a3_a4', 'diff_a3_a5', 'prod_a3_a5', 'diff_a3_a6', 'prod_a3_a6', 'diff_a4_a5', 'prod_a4_a5', 'diff_a4_a6', 'prod_a4_a6', 'diff_a5_a6', 'prod_a5_a6']
2025-03-19 23:46:29,922 - OptimalClassifier - INFO - Загружены данные: 73 признаков
2025-03-19 23:46:29,925 - OptimalClassifier - INFO - Запуск оптимизации гиперпараметров
2025-03-19 23:46:29,925 - OptimalClassifier - INFO - Запуск оптимизации гиперпараметров для MONK-2 с 50 попытками
2025-03-19 23:48:51,180 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 36.
2025-03-19 23:48:55,732 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 36.
2025-03-19 23:48:59,612 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 31.
2025-03-19 23:49:02,478 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 20.
2025-03-19 23:49:16,656 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 31.
2025-03-19 23:49:28,513 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 28.
2025-03-19 23:49:32,064 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 28.
2025-03-19 23:49:49,047 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 24.
2025-03-19 23:49:52,267 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 20.
2025-03-19 23:49:54,933 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 20.
2025-03-19 23:49:58,508 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 20.
2025-03-19 23:50:02,323 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 24.
2025-03-19 23:50:23,946 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 26.
2025-03-19 23:50:27,222 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 21.
2025-03-19 23:50:30,729 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 26.
2025-03-19 23:50:34,438 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 20.
2025-03-19 23:50:37,877 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 27.
2025-03-19 23:50:41,158 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 21.
2025-03-19 23:50:44,422 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 20.
2025-03-19 23:50:49,461 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 21.
2025-03-19 23:50:55,346 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 49.
2025-03-19 23:51:07,432 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 20.
2025-03-19 23:51:28,934 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 26.
2025-03-19 23:51:40,872 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 20.
2025-03-19 23:51:46,738 - OptimalClassifier - ERROR - Ошибка при обучении модели: Trial was pruned at epoch 20.
2025-03-19 23:51:46,739 - OptimalClassifier - INFO - Лучшие гиперпараметры для MONK-2: {'n_layers': 2, 'units_first': 128, 'activation': 'tanh', 'use_batch_norm': False, 'dropout_rate': 0.18538266542028187, 'use_residual': False, 'learning_rate': 0.0040201165730166305, 'batch_size': 32, 'optimizer': 'rmsprop', 'use_regularization': False}
2025-03-19 23:51:46,739 - OptimalClassifier - INFO - Достигнутая точность: 1.0000
2025-03-19 23:51:46,742 - OptimalClassifier - WARNING - Не удалось создать визуализации оптимизации: No module named 'plotly'
2025-03-19 23:51:46,742 - OptimalClassifier - INFO - Создание ансамбля из 20 моделей
2025-03-19 23:51:46,743 - OptimalClassifier - INFO - Инициализирован EnsembleClassifier для MONK-2 с 20 моделями
2025-03-19 23:51:46,743 - OptimalClassifier - INFO - Построение стекингового ансамбля: начинаем с 15 моделей, отбираем 20 лучших
2025-03-19 23:51:46,743 - OptimalClassifier - INFO - Построение ансамбля из 15 моделей
2025-03-19 23:51:46,743 - OptimalClassifier - INFO - Обучение модели 1/15 с архитектурой [512, 256, 128], активация=relu, LR=0.002289
2025-03-19 23:51:48,354 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:51:48,682 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:51:49,001 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:51:49,317 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:52:30,838 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:52:31,132 - OptimalClassifier - INFO - Модель 1 обучена: val_accuracy=1.0000, epochs=300
2025-03-19 23:52:31,132 - OptimalClassifier - INFO - Обучение модели 2/15 с архитектурой [128, 256, 128], активация=elu, LR=0.001084
2025-03-19 23:52:32,962 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:52:33,617 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:52:34,174 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:52:34,419 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:52:34,768 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:52:35,022 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:52:35,366 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:52:35,504 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:52:35,637 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:04,932 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:53:05,258 - OptimalClassifier - INFO - Модель 2 обучена: val_accuracy=1.0000, epochs=300
2025-03-19 23:53:05,259 - OptimalClassifier - INFO - Обучение модели 3/15 с архитектурой [64, 64, 64, 64], активация=selu, LR=0.002874
2025-03-19 23:53:06,714 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:07,231 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:07,462 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:08,073 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:08,387 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:10,689 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:11,030 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:11,667 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:11,811 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:12,597 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:13,885 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:32,480 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:53:32,833 - OptimalClassifier - INFO - Модель 3 обучена: val_accuracy=1.0000, epochs=265
2025-03-19 23:53:32,835 - OptimalClassifier - INFO - Обучение модели 4/15 с архитектурой [256, 64], активация=tanh, LR=0.000486
2025-03-19 23:53:34,272 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:34,570 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:34,898 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:35,662 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:38,002 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:39,100 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:39,269 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:40,114 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:40,772 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:41,241 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:53:42,822 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:01,683 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:54:01,999 - OptimalClassifier - INFO - Модель 4 обучена: val_accuracy=1.0000, epochs=300
2025-03-19 23:54:01,999 - OptimalClassifier - INFO - Обучение модели 5/15 с архитектурой [128, 96, 64, 32], активация=sigmoid, LR=0.007584
2025-03-19 23:54:03,819 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:06,433 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:06,565 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:07,031 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:07,200 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:07,681 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:07,892 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:08,103 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:08,610 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:31,261 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:54:31,555 - OptimalClassifier - INFO - Модель 5 обучена: val_accuracy=1.0000, epochs=300
2025-03-19 23:54:31,556 - OptimalClassifier - INFO - Обучение модели 6/15 с архитектурой [512, 256, 128], активация=relu, LR=0.001217
2025-03-19 23:54:32,918 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:33,841 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:34,157 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:34,330 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:34,504 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:34,814 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:54:34,990 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:17,663 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:55:17,992 - OptimalClassifier - INFO - Модель 6 обучена: val_accuracy=1.0000, epochs=300
2025-03-19 23:55:17,992 - OptimalClassifier - INFO - Обучение модели 7/15 с архитектурой [128, 256, 128], активация=elu, LR=0.003393
2025-03-19 23:55:19,239 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:19,373 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:19,507 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:19,641 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:19,873 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:20,230 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:20,669 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:22,247 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:22,691 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:23,234 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:23,884 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:24,768 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:25,323 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:25,455 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:45,447 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:55:45,782 - OptimalClassifier - INFO - Модель 7 обучена: val_accuracy=1.0000, epochs=246
2025-03-19 23:55:45,782 - OptimalClassifier - INFO - Обучение модели 8/15 с архитектурой [64, 64, 64, 64], активация=selu, LR=0.002455
2025-03-19 23:55:47,934 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:48,062 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:48,196 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:48,606 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:49,420 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:49,842 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:50,074 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:55:50,206 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:56:17,150 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:56:17,541 - OptimalClassifier - INFO - Модель 8 обучена: val_accuracy=1.0000, epochs=300
2025-03-19 23:56:17,541 - OptimalClassifier - INFO - Обучение модели 9/15 с архитектурой [256, 64], активация=tanh, LR=0.015036
2025-03-19 23:56:18,764 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:56:21,193 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:56:21,671 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:56:22,089 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:56:22,736 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:56:22,871 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:56:23,078 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:56:23,195 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:56:24,316 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:56:45,946 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:56:46,217 - OptimalClassifier - INFO - Модель 9 обучена: val_accuracy=1.0000, epochs=300
2025-03-19 23:56:46,217 - OptimalClassifier - INFO - Обучение модели 10/15 с архитектурой [128, 96, 64, 32], активация=sigmoid, LR=0.004275
2025-03-19 23:56:47,742 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:14,154 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:57:14,501 - OptimalClassifier - INFO - Модель 10 обучена: val_accuracy=0.6176, epochs=300
2025-03-19 23:57:14,501 - OptimalClassifier - INFO - Обучение модели 11/15 с архитектурой [512, 256, 128], активация=relu, LR=0.016837
2025-03-19 23:57:15,867 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:16,900 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:17,348 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:17,652 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:19,061 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:35,802 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:44,313 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:57:44,642 - OptimalClassifier - INFO - Модель 11 обучена: val_accuracy=0.8529, epochs=201
2025-03-19 23:57:44,643 - OptimalClassifier - INFO - Обучение модели 12/15 с архитектурой [128, 256, 128], активация=elu, LR=0.001154
2025-03-19 23:57:47,077 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:47,213 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:47,463 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:48,031 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:48,395 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:48,646 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:48,823 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:48,964 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:57:49,209 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:19,468 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:58:19,830 - OptimalClassifier - INFO - Модель 12 обучена: val_accuracy=1.0000, epochs=300
2025-03-19 23:58:19,830 - OptimalClassifier - INFO - Обучение модели 13/15 с архитектурой [64, 64, 64, 64], активация=selu, LR=0.012357
2025-03-19 23:58:21,653 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:21,783 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:22,292 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:22,425 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:22,740 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:22,876 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:23,005 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:23,134 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:28,793 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:58:29,119 - OptimalClassifier - INFO - Модель 13 обучена: val_accuracy=1.0000, epochs=70
2025-03-19 23:58:29,121 - OptimalClassifier - INFO - Обучение модели 14/15 с архитектурой [256, 64], активация=tanh, LR=0.005036
2025-03-19 23:58:30,195 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:30,309 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:30,514 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:31,338 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:32,124 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:32,719 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:32,867 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:33,509 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:34,154 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:34,359 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:34,473 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:57,474 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:58:57,789 - OptimalClassifier - INFO - Модель 14 обучена: val_accuracy=1.0000, epochs=300
2025-03-19 23:58:57,789 - OptimalClassifier - INFO - Обучение модели 15/15 с архитектурой [128, 96, 64, 32], активация=sigmoid, LR=0.005024
2025-03-19 23:58:59,234 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:59,532 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:58:59,663 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:02,996 - absl - WARNING - Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
2025-03-19 23:59:03,499 - OptimalClassifier - INFO - Модель 15 обучена: val_accuracy=0.6176, epochs=39
2025-03-19 23:59:03,501 - OptimalClassifier - INFO - Отбор моделей: оставляем 13 из 15 моделей
2025-03-19 23:59:03,501 - OptimalClassifier - INFO - После обучения осталось 13 моделей, меньше или равно требуемым 20
2025-03-19 23:59:03,501 - OptimalClassifier - INFO - Оценка ансамбля на тестовой выборке
2025-03-19 23:59:03,501 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:05,539 - OptimalClassifier - INFO - Оценка ансамбля: accuracy=0.8935, roc_auc=0.9553
2025-03-19 23:59:07,413 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,457 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,471 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,488 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,504 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,522 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,534 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,551 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,565 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,580 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,593 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,608 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,624 - absl - WARNING - You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. 
2025-03-19 23:59:07,637 - OptimalClassifier - INFO - Ансамбль из 20 моделей сохранен в models\monk2_ensemble
2025-03-19 23:59:07,637 - OptimalClassifier - INFO - Сравнительный анализ с другими алгоритмами
2025-03-19 23:59:07,638 - OptimalClassifier - INFO - Инициализирован ComparativeAnalyzer для MONK-2
2025-03-19 23:59:07,638 - OptimalClassifier - INFO - Обучение базовых моделей для сравнения
2025-03-19 23:59:07,638 - OptimalClassifier - INFO - Обучение одиночной нейронной сети
2025-03-19 23:59:07,959 - OptimalClassifier - INFO - Обучение Random Forest
2025-03-19 23:59:08,400 - OptimalClassifier - INFO - Обучение SVM
2025-03-19 23:59:08,435 - OptimalClassifier - INFO - Обучение Gradient Boosting
2025-03-19 23:59:08,727 - OptimalClassifier - INFO - Обучение KNN
2025-03-19 23:59:08,728 - OptimalClassifier - INFO - Обучение Logistic Regression
2025-03-19 23:59:10,955 - OptimalClassifier - INFO - Обучено 7 моделей для сравнения
2025-03-19 23:59:10,955 - OptimalClassifier - INFO - Сравнительный анализ устойчивости к шуму: 7 моделей, 4 типов шума, 6 уровней, 3 экспериментов
2025-03-19 23:59:10,956 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:12,249 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:13,367 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:14,482 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'gaussian' уровня 0.0: точность = 0.8935 (±0.0000)
2025-03-19 23:59:14,487 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:15,601 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:16,713 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:17,853 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'gaussian' уровня 0.1: точность = 0.8850 (±0.0029)
2025-03-19 23:59:17,862 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:19,020 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:20,151 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:21,249 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'gaussian' уровня 0.2: точность = 0.8665 (±0.0097)
2025-03-19 23:59:21,264 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:22,376 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:23,508 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:24,614 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'gaussian' уровня 0.3: точность = 0.8526 (±0.0093)
2025-03-19 23:59:24,631 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:25,757 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:26,878 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:28,009 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'gaussian' уровня 0.4: точность = 0.8603 (±0.0134)
2025-03-19 23:59:28,029 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:29,165 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:30,300 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:31,423 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'gaussian' уровня 0.5: точность = 0.8426 (±0.0100)
2025-03-19 23:59:31,428 - OptimalClassifier - INFO - Модель Single NN, шум 'gaussian' уровня 0.0: точность = 0.9074 (±0.0000)
2025-03-19 23:59:31,450 - OptimalClassifier - INFO - Модель Single NN, шум 'gaussian' уровня 0.1: точность = 0.8943 (±0.0072)
2025-03-19 23:59:31,486 - OptimalClassifier - INFO - Модель Single NN, шум 'gaussian' уровня 0.2: точность = 0.8935 (±0.0019)
2025-03-19 23:59:31,533 - OptimalClassifier - INFO - Модель Single NN, шум 'gaussian' уровня 0.3: точность = 0.8696 (±0.0039)
2025-03-19 23:59:31,589 - OptimalClassifier - INFO - Модель Single NN, шум 'gaussian' уровня 0.4: точность = 0.8619 (±0.0142)
2025-03-19 23:59:31,659 - OptimalClassifier - INFO - Модель Single NN, шум 'gaussian' уровня 0.5: точность = 0.8349 (±0.0061)
2025-03-19 23:59:32,010 - OptimalClassifier - INFO - Модель Random Forest, шум 'gaussian' уровня 0.0: точность = 0.8565 (±0.0000)
2025-03-19 23:59:32,210 - OptimalClassifier - INFO - Модель Random Forest, шум 'gaussian' уровня 0.1: точность = 0.8472 (±0.0000)
2025-03-19 23:59:32,395 - OptimalClassifier - INFO - Модель Random Forest, шум 'gaussian' уровня 0.2: точность = 0.8395 (±0.0029)
2025-03-19 23:59:32,594 - OptimalClassifier - INFO - Модель Random Forest, шум 'gaussian' уровня 0.3: точность = 0.8364 (±0.0039)
2025-03-19 23:59:32,803 - OptimalClassifier - INFO - Модель Random Forest, шум 'gaussian' уровня 0.4: точность = 0.8102 (±0.0124)
2025-03-19 23:59:33,020 - OptimalClassifier - INFO - Модель Random Forest, шум 'gaussian' уровня 0.5: точность = 0.8086 (±0.0029)
2025-03-19 23:59:33,042 - OptimalClassifier - INFO - Модель SVM, шум 'gaussian' уровня 0.0: точность = 0.6829 (±0.0000)
2025-03-19 23:59:33,078 - OptimalClassifier - INFO - Модель SVM, шум 'gaussian' уровня 0.1: точность = 0.6775 (±0.0022)
2025-03-19 23:59:33,123 - OptimalClassifier - INFO - Модель SVM, шум 'gaussian' уровня 0.2: точность = 0.6806 (±0.0033)
2025-03-19 23:59:33,179 - OptimalClassifier - INFO - Модель SVM, шум 'gaussian' уровня 0.3: точность = 0.6829 (±0.0019)
2025-03-19 23:59:33,247 - OptimalClassifier - INFO - Модель SVM, шум 'gaussian' уровня 0.4: точность = 0.6790 (±0.0066)
2025-03-19 23:59:33,329 - OptimalClassifier - INFO - Модель SVM, шум 'gaussian' уровня 0.5: точность = 0.6798 (±0.0085)
2025-03-19 23:59:33,337 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'gaussian' уровня 0.0: точность = 0.8449 (±0.0000)
2025-03-19 23:59:33,356 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'gaussian' уровня 0.1: точность = 0.8349 (±0.0055)
2025-03-19 23:59:33,389 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'gaussian' уровня 0.2: точность = 0.8256 (±0.0076)
2025-03-19 23:59:33,433 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'gaussian' уровня 0.3: точность = 0.8133 (±0.0104)
2025-03-19 23:59:33,489 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'gaussian' уровня 0.4: точность = 0.8017 (±0.0029)
2025-03-19 23:59:33,557 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'gaussian' уровня 0.5: точность = 0.7855 (±0.0079)
2025-03-19 23:59:33,889 - OptimalClassifier - INFO - Модель KNN, шум 'gaussian' уровня 0.0: точность = 0.7593 (±0.0000)
2025-03-19 23:59:33,926 - OptimalClassifier - INFO - Модель KNN, шум 'gaussian' уровня 0.1: точность = 0.7500 (±0.0068)
2025-03-19 23:59:33,973 - OptimalClassifier - INFO - Модель KNN, шум 'gaussian' уровня 0.2: точность = 0.7562 (±0.0022)
2025-03-19 23:59:34,044 - OptimalClassifier - INFO - Модель KNN, шум 'gaussian' уровня 0.3: точность = 0.7346 (±0.0076)
2025-03-19 23:59:34,130 - OptimalClassifier - INFO - Модель KNN, шум 'gaussian' уровня 0.4: точность = 0.7299 (±0.0076)
2025-03-19 23:59:34,235 - OptimalClassifier - INFO - Модель KNN, шум 'gaussian' уровня 0.5: точность = 0.7346 (±0.0107)
2025-03-19 23:59:34,239 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'gaussian' уровня 0.0: точность = 0.7245 (±0.0000)
2025-03-19 23:59:34,260 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'gaussian' уровня 0.1: точность = 0.7222 (±0.0033)
2025-03-19 23:59:34,303 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'gaussian' уровня 0.2: точность = 0.7091 (±0.0111)
2025-03-19 23:59:34,363 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'gaussian' уровня 0.3: точность = 0.7068 (±0.0085)
2025-03-19 23:59:34,415 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'gaussian' уровня 0.4: точность = 0.6968 (±0.0050)
2025-03-19 23:59:34,479 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'gaussian' уровня 0.5: точность = 0.6867 (±0.0144)
2025-03-19 23:59:34,480 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:35,607 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:36,716 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:37,815 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'uniform' уровня 0.0: точность = 0.8935 (±0.0000)
2025-03-19 23:59:37,823 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:38,933 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:40,057 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:41,148 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'uniform' уровня 0.1: точность = 0.8796 (±0.0019)
2025-03-19 23:59:41,163 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:42,277 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:43,390 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:44,511 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'uniform' уровня 0.2: точность = 0.8742 (±0.0039)
2025-03-19 23:59:44,528 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:45,650 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:46,784 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:47,931 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'uniform' уровня 0.3: точность = 0.8634 (±0.0098)
2025-03-19 23:59:47,956 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:49,106 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:50,228 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:51,327 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'uniform' уровня 0.4: точность = 0.8542 (±0.0038)
2025-03-19 23:59:51,358 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:52,495 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:53,619 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:54,715 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'uniform' уровня 0.5: точность = 0.8387 (±0.0163)
2025-03-19 23:59:54,722 - OptimalClassifier - INFO - Модель Single NN, шум 'uniform' уровня 0.0: точность = 0.9074 (±0.0000)
2025-03-19 23:59:54,749 - OptimalClassifier - INFO - Модель Single NN, шум 'uniform' уровня 0.1: точность = 0.8935 (±0.0019)
2025-03-19 23:59:54,792 - OptimalClassifier - INFO - Модель Single NN, шум 'uniform' уровня 0.2: точность = 0.8827 (±0.0058)
2025-03-19 23:59:54,850 - OptimalClassifier - INFO - Модель Single NN, шум 'uniform' уровня 0.3: точность = 0.8704 (±0.0082)
2025-03-19 23:59:54,925 - OptimalClassifier - INFO - Модель Single NN, шум 'uniform' уровня 0.4: точность = 0.8503 (±0.0058)
2025-03-19 23:59:55,014 - OptimalClassifier - INFO - Модель Single NN, шум 'uniform' уровня 0.5: точность = 0.8495 (±0.0100)
2025-03-19 23:59:55,459 - OptimalClassifier - INFO - Модель Random Forest, шум 'uniform' уровня 0.0: точность = 0.8565 (±0.0000)
2025-03-19 23:59:55,658 - OptimalClassifier - INFO - Модель Random Forest, шум 'uniform' уровня 0.1: точность = 0.8472 (±0.0033)
2025-03-19 23:59:55,854 - OptimalClassifier - INFO - Модель Random Forest, шум 'uniform' уровня 0.2: точность = 0.8426 (±0.0033)
2025-03-19 23:59:56,072 - OptimalClassifier - INFO - Модель Random Forest, шум 'uniform' уровня 0.3: точность = 0.8364 (±0.0107)
2025-03-19 23:59:56,296 - OptimalClassifier - INFO - Модель Random Forest, шум 'uniform' уровня 0.4: точность = 0.8133 (±0.0048)
2025-03-19 23:59:56,539 - OptimalClassifier - INFO - Модель Random Forest, шум 'uniform' уровня 0.5: точность = 0.8071 (±0.0123)
2025-03-19 23:59:56,565 - OptimalClassifier - INFO - Модель SVM, шум 'uniform' уровня 0.0: точность = 0.6829 (±0.0000)
2025-03-19 23:59:56,610 - OptimalClassifier - INFO - Модель SVM, шум 'uniform' уровня 0.1: точность = 0.6798 (±0.0022)
2025-03-19 23:59:56,669 - OptimalClassifier - INFO - Модель SVM, шум 'uniform' уровня 0.2: точность = 0.6790 (±0.0029)
2025-03-19 23:59:56,739 - OptimalClassifier - INFO - Модель SVM, шум 'uniform' уровня 0.3: точность = 0.6813 (±0.0039)
2025-03-19 23:59:56,824 - OptimalClassifier - INFO - Модель SVM, шум 'uniform' уровня 0.4: точность = 0.6852 (±0.0057)
2025-03-19 23:59:56,935 - OptimalClassifier - INFO - Модель SVM, шум 'uniform' уровня 0.5: точность = 0.6775 (±0.0066)
2025-03-19 23:59:56,940 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'uniform' уровня 0.0: точность = 0.8449 (±0.0000)
2025-03-19 23:59:56,965 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'uniform' уровня 0.1: точность = 0.8333 (±0.0019)
2025-03-19 23:59:57,011 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'uniform' уровня 0.2: точность = 0.8210 (±0.0048)
2025-03-19 23:59:57,071 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'uniform' уровня 0.3: точность = 0.7932 (±0.0029)
2025-03-19 23:59:57,144 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'uniform' уровня 0.4: точность = 0.7894 (±0.0050)
2025-03-19 23:59:57,233 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'uniform' уровня 0.5: точность = 0.7824 (±0.0095)
2025-03-19 23:59:57,251 - OptimalClassifier - INFO - Модель KNN, шум 'uniform' уровня 0.0: точность = 0.7593 (±0.0000)
2025-03-19 23:59:57,290 - OptimalClassifier - INFO - Модель KNN, шум 'uniform' уровня 0.1: точность = 0.7500 (±0.0033)
2025-03-19 23:59:57,350 - OptimalClassifier - INFO - Модель KNN, шум 'uniform' уровня 0.2: точность = 0.7431 (±0.0057)
2025-03-19 23:59:57,424 - OptimalClassifier - INFO - Модель KNN, шум 'uniform' уровня 0.3: точность = 0.7469 (±0.0114)
2025-03-19 23:59:57,541 - OptimalClassifier - INFO - Модель KNN, шум 'uniform' уровня 0.4: точность = 0.7377 (±0.0076)
2025-03-19 23:59:57,670 - OptimalClassifier - INFO - Модель KNN, шум 'uniform' уровня 0.5: точность = 0.7276 (±0.0072)
2025-03-19 23:59:57,673 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'uniform' уровня 0.0: точность = 0.7245 (±0.0000)
2025-03-19 23:59:57,711 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'uniform' уровня 0.1: точность = 0.7253 (±0.0085)
2025-03-19 23:59:57,761 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'uniform' уровня 0.2: точность = 0.6998 (±0.0039)
2025-03-19 23:59:57,817 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'uniform' уровня 0.3: точность = 0.6921 (±0.0136)
2025-03-19 23:59:57,886 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'uniform' уровня 0.4: точность = 0.6991 (±0.0124)
2025-03-19 23:59:57,968 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'uniform' уровня 0.5: точность = 0.6960 (±0.0066)
2025-03-19 23:59:57,968 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-19 23:59:59,068 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:00,189 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:01,304 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'impulse' уровня 0.0: точность = 0.8935 (±0.0000)
2025-03-20 00:00:01,342 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:02,479 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:03,636 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:04,742 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'impulse' уровня 0.1: точность = 0.8681 (±0.0038)
2025-03-20 00:00:04,806 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:05,964 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:07,127 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:08,259 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'impulse' уровня 0.2: точность = 0.8542 (±0.0019)
2025-03-20 00:00:08,351 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:09,547 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:10,745 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:11,857 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'impulse' уровня 0.3: точность = 0.8225 (±0.0072)
2025-03-20 00:00:11,977 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:13,207 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:14,443 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:15,554 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'impulse' уровня 0.4: точность = 0.8148 (±0.0115)
2025-03-20 00:00:15,728 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:16,985 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:18,227 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:19,360 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'impulse' уровня 0.5: точность = 0.7785 (±0.0095)
2025-03-20 00:00:19,364 - OptimalClassifier - INFO - Модель Single NN, шум 'impulse' уровня 0.0: точность = 0.9074 (±0.0000)
2025-03-20 00:00:19,476 - OptimalClassifier - INFO - Модель Single NN, шум 'impulse' уровня 0.1: точность = 0.8835 (±0.0044)
2025-03-20 00:00:19,679 - OptimalClassifier - INFO - Модель Single NN, шум 'impulse' уровня 0.2: точность = 0.8650 (±0.0076)
2025-03-20 00:00:19,958 - OptimalClassifier - INFO - Модель Single NN, шум 'impulse' уровня 0.3: точность = 0.8302 (±0.0153)
2025-03-20 00:00:20,391 - OptimalClassifier - INFO - Модель Single NN, шум 'impulse' уровня 0.4: точность = 0.8171 (±0.0148)
2025-03-20 00:00:20,891 - OptimalClassifier - INFO - Модель Single NN, шум 'impulse' уровня 0.5: точность = 0.7924 (±0.0058)
2025-03-20 00:00:21,049 - OptimalClassifier - INFO - Модель Random Forest, шум 'impulse' уровня 0.0: точность = 0.8565 (±0.0000)
2025-03-20 00:00:21,309 - OptimalClassifier - INFO - Модель Random Forest, шум 'impulse' уровня 0.1: точность = 0.8519 (±0.0019)
2025-03-20 00:00:21,668 - OptimalClassifier - INFO - Модель Random Forest, шум 'impulse' уровня 0.2: точность = 0.8125 (±0.0065)
2025-03-20 00:00:22,106 - OptimalClassifier - INFO - Модель Random Forest, шум 'impulse' уровня 0.3: точность = 0.8140 (±0.0089)
2025-03-20 00:00:22,630 - OptimalClassifier - INFO - Модель Random Forest, шум 'impulse' уровня 0.4: точность = 0.8040 (±0.0095)
2025-03-20 00:00:23,289 - OptimalClassifier - INFO - Модель Random Forest, шум 'impulse' уровня 0.5: точность = 0.7924 (±0.0048)
2025-03-20 00:00:23,310 - OptimalClassifier - INFO - Модель SVM, шум 'impulse' уровня 0.0: точность = 0.6829 (±0.0000)
2025-03-20 00:00:23,438 - OptimalClassifier - INFO - Модель SVM, шум 'impulse' уровня 0.1: точность = 0.6829 (±0.0033)
2025-03-20 00:00:23,658 - OptimalClassifier - INFO - Модель SVM, шум 'impulse' уровня 0.2: точность = 0.6860 (±0.0022)
2025-03-20 00:00:23,962 - OptimalClassifier - INFO - Модель SVM, шум 'impulse' уровня 0.3: точность = 0.6821 (±0.0048)
2025-03-20 00:00:24,341 - OptimalClassifier - INFO - Модель SVM, шум 'impulse' уровня 0.4: точность = 0.6782 (±0.0057)
2025-03-20 00:00:24,809 - OptimalClassifier - INFO - Модель SVM, шум 'impulse' уровня 0.5: точность = 0.6752 (±0.0085)
2025-03-20 00:00:24,814 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'impulse' уровня 0.0: точность = 0.8449 (±0.0000)
2025-03-20 00:00:24,910 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'impulse' уровня 0.1: точность = 0.8241 (±0.0033)
2025-03-20 00:00:25,110 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'impulse' уровня 0.2: точность = 0.8225 (±0.0154)
2025-03-20 00:00:25,393 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'impulse' уровня 0.3: точность = 0.7924 (±0.0093)
2025-03-20 00:00:25,759 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'impulse' уровня 0.4: точность = 0.7824 (±0.0136)
2025-03-20 00:00:26,216 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'impulse' уровня 0.5: точность = 0.7485 (±0.0066)
2025-03-20 00:00:26,236 - OptimalClassifier - INFO - Модель KNN, шум 'impulse' уровня 0.0: точность = 0.7593 (±0.0000)
2025-03-20 00:00:26,363 - OptimalClassifier - INFO - Модель KNN, шум 'impulse' уровня 0.1: точность = 0.7523 (±0.0057)
2025-03-20 00:00:26,600 - OptimalClassifier - INFO - Модель KNN, шум 'impulse' уровня 0.2: точность = 0.7207 (±0.0097)
2025-03-20 00:00:26,938 - OptimalClassifier - INFO - Модель KNN, шум 'impulse' уровня 0.3: точность = 0.7238 (±0.0076)
2025-03-20 00:00:27,385 - OptimalClassifier - INFO - Модель KNN, шум 'impulse' уровня 0.4: точность = 0.7022 (±0.0252)
2025-03-20 00:00:27,919 - OptimalClassifier - INFO - Модель KNN, шум 'impulse' уровня 0.5: точность = 0.6736 (±0.0237)
2025-03-20 00:00:27,922 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'impulse' уровня 0.0: точность = 0.7245 (±0.0000)
2025-03-20 00:00:28,033 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'impulse' уровня 0.1: точность = 0.7068 (±0.0079)
2025-03-20 00:00:28,214 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'impulse' уровня 0.2: точность = 0.7091 (±0.0029)
2025-03-20 00:00:28,494 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'impulse' уровня 0.3: точность = 0.6898 (±0.0168)
2025-03-20 00:00:28,866 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'impulse' уровня 0.4: точность = 0.6844 (±0.0176)
2025-03-20 00:00:29,302 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'impulse' уровня 0.5: точность = 0.6906 (±0.0104)
2025-03-20 00:00:29,302 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:30,407 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:31,509 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:32,623 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'missing' уровня 0.0: точность = 0.8935 (±0.0000)
2025-03-20 00:00:32,628 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:33,737 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:34,837 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:35,964 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'missing' уровня 0.1: точность = 0.8843 (±0.0068)
2025-03-20 00:00:35,971 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:37,080 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:38,190 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:39,284 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'missing' уровня 0.2: точность = 0.8619 (±0.0048)
2025-03-20 00:00:39,294 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:40,427 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:41,546 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:42,673 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'missing' уровня 0.3: точность = 0.8488 (±0.0011)
2025-03-20 00:00:42,682 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:43,834 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:44,954 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:46,066 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'missing' уровня 0.4: точность = 0.8380 (±0.0050)
2025-03-20 00:00:46,077 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:47,198 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:48,346 - OptimalClassifier - INFO - Используем взвешенное голосование, веса: [0.05716033 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997 0.07856997
 0.07856997]
2025-03-20 00:00:49,458 - OptimalClassifier - INFO - Модель Ensemble NN, шум 'missing' уровня 0.5: точность = 0.8210 (±0.0058)
2025-03-20 00:00:49,465 - OptimalClassifier - INFO - Модель Single NN, шум 'missing' уровня 0.0: точность = 0.9074 (±0.0000)
2025-03-20 00:00:49,481 - OptimalClassifier - INFO - Модель Single NN, шум 'missing' уровня 0.1: точность = 0.8866 (±0.0087)
2025-03-20 00:00:49,504 - OptimalClassifier - INFO - Модель Single NN, шум 'missing' уровня 0.2: точность = 0.8673 (±0.0097)
2025-03-20 00:00:49,533 - OptimalClassifier - INFO - Модель Single NN, шум 'missing' уровня 0.3: точность = 0.8519 (±0.0068)
2025-03-20 00:00:49,568 - OptimalClassifier - INFO - Модель Single NN, шум 'missing' уровня 0.4: точность = 0.8302 (±0.0163)
2025-03-20 00:00:49,606 - OptimalClassifier - INFO - Модель Single NN, шум 'missing' уровня 0.5: точность = 0.8171 (±0.0170)
2025-03-20 00:00:49,764 - OptimalClassifier - INFO - Модель Random Forest, шум 'missing' уровня 0.0: точность = 0.8565 (±0.0000)
2025-03-20 00:00:49,935 - OptimalClassifier - INFO - Модель Random Forest, шум 'missing' уровня 0.1: точность = 0.8403 (±0.0082)
2025-03-20 00:00:50,153 - OptimalClassifier - INFO - Модель Random Forest, шум 'missing' уровня 0.2: точность = 0.8318 (±0.0029)
2025-03-20 00:00:50,357 - OptimalClassifier - INFO - Модель Random Forest, шум 'missing' уровня 0.3: точность = 0.8032 (±0.0165)
2025-03-20 00:00:50,543 - OptimalClassifier - INFO - Модель Random Forest, шум 'missing' уровня 0.4: точность = 0.7986 (±0.0033)
2025-03-20 00:00:50,733 - OptimalClassifier - INFO - Модель Random Forest, шум 'missing' уровня 0.5: точность = 0.7986 (±0.0200)
2025-03-20 00:00:50,755 - OptimalClassifier - INFO - Модель SVM, шум 'missing' уровня 0.0: точность = 0.6829 (±0.0000)
2025-03-20 00:00:50,788 - OptimalClassifier - INFO - Модель SVM, шум 'missing' уровня 0.1: точность = 0.6821 (±0.0022)
2025-03-20 00:00:50,827 - OptimalClassifier - INFO - Модель SVM, шум 'missing' уровня 0.2: точность = 0.6836 (±0.0029)
2025-03-20 00:00:50,869 - OptimalClassifier - INFO - Модель SVM, шум 'missing' уровня 0.3: точность = 0.6829 (±0.0038)
2025-03-20 00:00:50,916 - OptimalClassifier - INFO - Модель SVM, шум 'missing' уровня 0.4: точность = 0.6782 (±0.0050)
2025-03-20 00:00:50,971 - OptimalClassifier - INFO - Модель SVM, шум 'missing' уровня 0.5: точность = 0.6767 (±0.0044)
2025-03-20 00:00:50,978 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'missing' уровня 0.0: точность = 0.8449 (±0.0000)
2025-03-20 00:00:50,995 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'missing' уровня 0.1: точность = 0.8356 (±0.0065)
2025-03-20 00:00:51,019 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'missing' уровня 0.2: точность = 0.8202 (±0.0029)
2025-03-20 00:00:51,049 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'missing' уровня 0.3: точность = 0.7955 (±0.0093)
2025-03-20 00:00:51,083 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'missing' уровня 0.4: точность = 0.7809 (±0.0111)
2025-03-20 00:00:51,123 - OptimalClassifier - INFO - Модель Gradient Boosting, шум 'missing' уровня 0.5: точность = 0.7762 (±0.0039)
2025-03-20 00:00:51,141 - OptimalClassifier - INFO - Модель KNN, шум 'missing' уровня 0.0: точность = 0.7593 (±0.0000)
2025-03-20 00:00:51,173 - OptimalClassifier - INFO - Модель KNN, шум 'missing' уровня 0.1: точность = 0.7423 (±0.0044)
2025-03-20 00:00:51,211 - OptimalClassifier - INFO - Модель KNN, шум 'missing' уровня 0.2: точность = 0.7369 (±0.0089)
2025-03-20 00:00:51,260 - OptimalClassifier - INFO - Модель KNN, шум 'missing' уровня 0.3: точность = 0.6983 (±0.0093)
2025-03-20 00:00:51,311 - OptimalClassifier - INFO - Модель KNN, шум 'missing' уровня 0.4: точность = 0.6998 (±0.0039)
2025-03-20 00:00:51,361 - OptimalClassifier - INFO - Модель KNN, шум 'missing' уровня 0.5: точность = 0.6952 (±0.0142)
2025-03-20 00:00:51,364 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'missing' уровня 0.0: точность = 0.7245 (±0.0000)
2025-03-20 00:00:51,377 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'missing' уровня 0.1: точность = 0.7184 (±0.0097)
2025-03-20 00:00:51,405 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'missing' уровня 0.2: точность = 0.6975 (±0.0055)
2025-03-20 00:00:51,454 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'missing' уровня 0.3: точность = 0.6898 (±0.0132)
2025-03-20 00:00:51,488 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'missing' уровня 0.4: точность = 0.6798 (±0.0058)
2025-03-20 00:00:51,544 - OptimalClassifier - INFO - Модель Logistic Regression, шум 'missing' уровня 0.5: точность = 0.6921 (±0.0165)
2025-03-20 00:00:53,879 - OptimalClassifier - INFO - === Результаты для MONK-2 ===
2025-03-20 00:00:53,881 - OptimalClassifier - INFO - Точность: 0.8935
2025-03-20 00:00:53,881 - OptimalClassifier - INFO - ROC AUC: 0.9552695483244293
2025-03-20 00:00:53,881 - OptimalClassifier - INFO - Время выполнения: 864.10 секунд
